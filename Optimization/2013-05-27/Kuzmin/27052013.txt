27.05.2013
Метод ветвей и границ для решения задачи целочисленного программирования и комбинаторных задач.

Целевая область разбивается на два участка.
x - мн-во точек(допустимые планов)
x1,x2	x1 U x2 = x;
F(x) -> max
Для этих двух областей вводятся функции верхней и нижней оценки.
L(x) 
U(x)
Эти функции должны быть легковычислимыми и удовлетворять следующему неравенству L(x)<=F(x)<=U(x)
Находим L(x1) U(x1), L(x2) U(x2)
Выполняем проверку U(x2)<=L(x1). Если выполняется, то ответ лежащий в области x1, не хуже чем ответ лежащий в области x2 => F(x1) >=F(x2) => x2 не рассматривается.
Иначе выполняем проверку U(x1)<=L(x2). Если выполняется, то ответ лежащий в области x2, не хуже чем ответ лежащий в области x1 => F(x2) >=F(x1) => x1 не
рассматривается.
Иначе решаем задачи для x1 и x2.
Если F(x) -> min
Находим L(x1) U(x1), L(x2) U(x2)
Выполняем проверку U(x2)<=L(x1). Если выполняется, то ответ лежащий в области x2, не хуже чем ответ лежащий в области x1 => F(x1) >= F(x2) => x1 не
рассматривается.
Иначе выполняем проверку U(x1)<=L(x2). Если выполняется, то ответ лежащий в области x1, не хуже чем ответ лежащий в области x2 => F(x2) >=F(x1) => x2 не
рассматривается.
Иначе решаем задачи для x1 и x2.
Алгоритмическая реализация.
Рассмотрим задачу целочисленного программирования - задачу на максимум.
В качестве верхней оценки этой задачи можно предложить решение этой же задачи без условия целочисленности, а в качестве нижней оценки берётся уже найденное 
решение из целевой области для которого функция максимальна.

Одна из задач, сводимая к задаче целочисленного программирования - задача коммивояжера.
n - городов.
с_ij - стоимость проезда из i в j
For all i,j,k c_ij<= c_ik + c_kj
Проехать все города и потратить минимальную сумму денег.
	1	2	3	4	5
1	inf	2	3!	1	1
2	2	inf	2	4	3!
3	3	2	inf	1!	5
4	1	4!	1	inf	2
5	1!	3	5	2	inf

Первый план - 1 -> 3 -> 2 -> 5 -> 1
Пометим его на матрице
Свойства задачи коммивояжера и отличия от задачи о назначениях.
В обеих задачах ищем перестановку, но в задаче коммивояжера перестановка должна быть циклом.

Сведение задачи коммивояжера к задаче целочисленного линейного программирования.
		|1, если двигаемся из i в j
x_ij =  {
		|0 - иначе
		
For all k sum(x_ik) = 1 - в столбце k есть 1.
For all r sum(x_ri) = 1 - в строке r есть 1.
sum(c_ij * x_ij) -> min
Введём y2,...,y_n (n-1 переменная) и дополнительные ограничения.
For i,j i!=j, n >= i,j >= 2
y_i - y_j + nx_ij <= n-1 - условие запрещает все циклы не проходящие через 1

Из этих условий видно, что задача целочисленного программирования является np-полной.

Метод ветвей и границ.
В качестве L - выбираем функцию, которую легко посчитать.
Вариант №1. Решить всю задачу целиком симплекс-методом
Вариант №2. Отбросить ограничения на цикл.

Шаг 1.
Берём задачу и решаем её как задачу о назначениях(венгерский алгоритм).
Может оказаться, что решение найдено. 
Шаг 2.
Если на предыдущем шаге решение не найдено. Значит существует цикл, выбираем цикл покороче(К примеру 4-2)
U(x) - найд. решение
Возьмём нашу матрицу и построим две подзадачи
	1	2	3	4	5
1	inf	2	3!	1	1
2	2	inf	2	inf	3!
3	3	2	inf	1!	5
4	1	4!	1	inf	2
5	1!	3	5	2	inf

	1	2	3	4	5
1	inf	2	3!	1	1
2	2	inf	2	4	3!
3	3	2	inf	1!	5
4	1	inf	1	inf	2
5	1!	3	5	2	inf
Затем каждая подзадача разбивается на ещё 2. И все решения у которых нижняя оценка хуже чем наша, отбрасываются.

#
	1	2	3	4	5
1	inf	0	2	0	0
2	0	inf	0	2	1
3	2	0	inf	0	4
4	0	2	0	inf	1
5	0	1	4	1	inf

	1	2	3	4	5
1	inf	0	3	0	0
2	0	inf	0	1	0
3	3	0	inf	0	4
4	0	1	0	inf	1
5	0	0	4	0	inf

1->4->5	2->3
Сложность полученного решения - 8. Теперь это наша нижняя оценка
Разбиваем матрицу на 2.
	1	2	3	4	5
1	inf	0	3	0	0
2	0	inf	inf	1	0	1->2->5 3->4 L(x) = 8
3	3	0	inf	0	4
4	0	1	0	inf	1
5	0	0	4	0	inf

	1	2	3	4	5
1	inf	0	3	0	0
2	0	inf	inf	1	0
3	3	0	inf	0	4
4	0	1	0	inf	1
5	0	0	4	0	inf

	1	2	3	4	5
1	inf	0	3	0	0
2	0	inf	inf	1	0
3	3	0	inf	0	4
4	0	1	0	inf	1
5	0	0	4	0	inf

	1	2	3	4	5
1	inf	0	3	0	0
2	0	inf	inf	1	0
3	3	0	inf	0	4	U(x) = 8
4	0	1	0	inf	1
5	0	0	4	0	inf

3x1 + 5x2 <= 15
5x1 + 3x2 <= 15
2x1 + 3x2 -> max

 3  5 1 0 15
 5  3 0 1 15
-2 -3 0 0 0

По методу отсечений берём строку в которой есть нецелочисленное значение.

0	1	5/16	-3/16	0	15/8
1	0	-3/16	5/16	0	15/8
0	0	-5/16	-13/16	1	-7/8