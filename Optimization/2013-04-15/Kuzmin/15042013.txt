15.04.2013
Задан ориентированный граф, каждому ребру задана стоимость потока. Числа могут быть целыми, могут быть вещественными.
0 - исток.
n - сток.
c_ij - пропускная способность ребра из i в j.
Цель - найти величины x_ij
Условия
x_ij <= c_ij
x_ij >= 0
Для всех вершин кроме начальной и конечной sum(x_k_i)(k from 0 to n) = sum(x_i_k)(k from 0 to n)
Из формулировки задачи мы видим, что это задача линейного программирования.
Способ 1.
Симплекс-метод
Способ 2.
Построить алгоритм с помощью двойственной задачи.
Двойственная задача - задача о минимальном разрезе.
Разрез - множество рёбер, такое что после удаления этих рёбер не существует пути от истока к стоку.
Задача о минимальном разрезе - задача о нахождении разреза,  у которого пропускная способность минимальная.
Теорема. Задача о минимальном разрезе является двойственной к задаче о максимальном потоке.
1. Одна задача на максимум, другая на минимум - 1-ое свойство выполнено
2. Объём любого потока <= пропускная способность любого разреза. Любой поток проведённый из истока в сток обязательно прошёл через одно из рёбер разреза. Из этого
следует, что невозможно провести поток больший, чем пропускная способность разреза.
3. Каждому потоку ставим в соответствие разрез
Будем говорить что i - вершина с избыточным потоком.
1. i = 0 - исток
2. Если существует j - вершина с избыточным потоком и x_j_i < c_j_i, то i тоже вершина с избыточным потоком
3. Если существует j - вершина с избыточным потоком и x_i_j>0 i - вершина с избыточным потоком.

В качестве разрез мы выбираем все рёбра соединяющие вершины с избыточными потоками ко всем остальным.
4. Существует допустимый план прямой задачи которому соответствует допустимый план двойственной задачи.
Рассмотрим алгоритм с предыдущего шага. Он может закончиться тем, что мы нашли разрез, или тем, что избыток потока появится в стоке. Тогда посмотрим, по какому
пути пришёл избыток потока. Таким образом, найдя этот путь мы можем найти min(c_ij-x_ij,x_ij)(c_ij-x_ij - для рёбер прямого направления,x_ij - для рёбер 
обратного направления). Это может привести либо к изменению потока либо к увеличению разреза но, поскольку поток не может увеличиваться бесконечно, этот
алгоритм рано или поздно приведёт нас к нахождению разреза.

Задача о нахождении максимального паросочетания.
Задан двудольный граф, некоторые вершины которого соединены рёбрами.
Требуется найти такой набор рёбер, чтобы все числа были не равны (i_1 != i_2 != ... != i_k,j_1 != j2 != ... != j_k)
Каждое ребро обозначим переменной x_ij(1 - ребро, 0 - нет ребра)
Условие задачи: для любой вершины i(1<=i<=n) - сумма выходящих рёбер <=1,для любой j(1<=j<=m) - сумма входящих рёбер <=1 и сумма всех x_ij -> max.
Также можно свести к задаче о потоке.
Для этого с каждой стороны рисуют новую фиктивную вершину, устанвливают пропускные способности всем рёбрам в 1 и далее решают как задачу о потоке.
Двойственная задача к задаче о паросочетании - задача о минимальном контролирующем множестве.
Контролирующим называется множество вершин графа, такое что любое ребро инцидентно хотя бы одной из вершин контролирующего множества. 
Наша цель - найти минимальное контролирующее множество.
Теорема. Задача о минимальном контролирующем множестве является двойственной к задаче о максимальном паросочетании
1. Одна на минимум другая на максимум
2. Величина любого паросочетания меньше либо равна величине контролирующего множества. Рассмотрим граф состоящий только из рёбер паросочетаний. Количество
вершин будет больше либо равно чем количество рёбер в паросочетании.
3. 
Находим в одной из долей такое подмножество вершин, что суммарное кол-во вершин второй доли связано с вершинами первой доли. Сейчас в паросочетании три ребра
оно не максимально, т.к можно сделать 4. Берём некоторую вершину
- если своб вершины нет, то берём всю долю
- если своб. вершина есть, то строим увеличивающую цепь

Для вершины первой доли 

Задача для самостоятельного решения. Задача о максимальном количестве путей.
Власти одной страны собираются построить к олимпиаде горнолыжный курорт. Трасса существует, нет подъёмников. Имеется некоторый набор спусков, представленный в 
виде графа(граф ациклический). Некто хочет проинспектировать трассу, скатившись по каждому участку трассы хотя бы один раз. Минимизировать количество полётов на
вертолёте.
1. Записать эту задачу в форме задачи линейного программирования
2. Найти двойственную
3. Доказать что это двойственная