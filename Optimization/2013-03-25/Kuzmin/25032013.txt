25.03.2013
Транспортная задача.
n - производителей.
m - потребителей.

с_ij - стоимость доставки единицы товара от i-го производителя j-му потребителю.
a1...a_n - объём производства
b1...b_n - объём потребления.

Цель: минимизировать расходы на доставку

#
3 карьера
5 баз хранения
Добыча(80,120,50)
Потребление(30,100,40,20,60)
Стоимость задаётся матрицей.
	1	2	3	4	5
   30 100  40  20  60
1	8	3  11	4	5  80
2  10  14	5	6	8 120
3   5	8	6  10	6  50

sum(a_i) = 250
sum(b_i) = 250
Случаи
sum(a_i) > sum(b_i) - не рассматривается - открытая(несбалансированная) транспортная задача
sum(a_i) = sum(b_i) - закрытая(сбалансированная) транспортная задача.
Обозначим за x_ij - объём перевозки между i и j
Свойства
1)x_ij >=0
2)Сумма перевозок по строке должна совпадать с производством(x11 + x12 + ... + x1n = a1)
3)Сумма перевозок по столбцу должна совпадать с потреблением(x11 + x21 + ... + xn1 = b1)
x_1_1 + x_1_2 + ... + x_1_m = a_1
			...
x_n_1 + x_n_2 + ... + x_n_m = a_n

x_1_1 + x_2_1 + ... + x_n_1 = b_1
			...
x_1_m + x_2_m + ... + x_n_m = b_n

x_1_1 * c_1_1 + x_1_2*c_1_2 + ... + x_n_m*c_n_m -> min или sum(c_i_j*x_i_j) -> min
Получили 1 вариант решения - сведение транспортной задачи к симплекс - методу

#
2 производителя
3 потребителя
	1	2	3	4
1   4	8	3 100			
2	5	6	4  80
   60  80  40
x_1_1 + x_1_2 + x_1_3 + 0*x_2_1 + 0*x_2_2 + 0*x_2_3 = 100
0*x_1_1 + 0*x_1_2 + 0*x_1_3 + x_2_1 + x_2_2 + x_2_3 = 80
0*x_1_1						+ x_2_1 + 	0	+	0	= 60
0	x_1_2	0	0	+ x_2_2	+ 0						= 80
0	0		0	+ x_1_3	+ 0	+ x_2_3					=40
4*x_1_1 + 8*x_1_2 + 3*x_1_3 + 5*x_2_1 + 6*x_2_2 + 4*x_2_3 -> min

Сведение транспортной задачи к поиску максимального потока
Рисуем двудольный граф, в первой доле каждая вершина соответсвует производителю, во второй потребителю. Добавляем ещё две вершины - сток и исток.
Проводим ребра между каждой вершиной первой доли и каждой вершиной второй доли. Каждое ребро подписывается двумя числами: объём, который можно провести
и стоимостью перевозки.
Задача: найти максимальный поток минимальной стоимости.
Предложение:Ранг системы уравнений в закрытой транспортной задаче не превосходит n+m-1
Сложим отдельно уравнения в первой половине матрицы и отдельно во второй половине матрицы.
Получим
x_1_1 + x_1_2 + ... + x_1_m + x_2_1 + ... + x_n_m = sum(a_i)
x_1_1 + x_1_2 + ... + x_1_m + x_2_1 + ... + x_n_m = sum(b_i)
Если вычтем одно из другого, то получим 0 = 0. Следовательно, одно из уравнений линейно зависит от остальных. Поэтому, можем выкинуть любое уравнение.
Таким образом, количество уравнений n+m-1
При решении симплекс-методом базис системы будет состоять из n+m-1 переменной.
Нужно найти первое допустимое решение.
1 способ: метод северо-западного угла - в качестве маршрута берём северо-западную(1,1) клетку
	4	8	3 100
	5	6	4  80
   60  80  40
Назначим в 1,1 объём перевозки 60, вычли из добычи и потребления
   	4	8	3  40
	5	6	4  80
    0  80  40
Теперь северо-западный угол - 1,2
   	4	8	3	0
	5	6	4  80
    0  40  40
Теперь северо-западный угол - 2,2
   	4	8	3   0
	5	6	4  40
    0   0  40
Не является самым выгодным способом, т.к выбирает первое допустимое решение
2 способ: поиск минимального элемента
	4	8	3 100
	5	6	4  80
   60  80  40
Выбираем минимальное число, только в тех, которые соответствуют ненулевым строкам и столбцам.
	4	8	3  60
	5	6	4  80
   60  80   0

   	4	8	3   0
	5	6	4  80
    0  80   0
	
	4	8	3   0
	5	6	4   0
    0   0   0
Предложение: результатом алгоритма северо-западного угла и алгоритма минимального элемента является базисный план, содержащий не более чем n+m-1 базисную переменную
Заметим, при работе алгоритмов, после одной итерации мы вычёркиваем либо строчку либо столбец. При этом, на последнем шаге, у нас останется одна строчка и один столбец и мы их вычеркнем обе сразу.
Таким образом количество итераций в цикле не более чем n+m-1.

	   x2 <= 4
 x1 +  x2 >= 2
2x1 -  x2 <= 6

-x1 + 3x2 -> max

      x2 + x3   = 4
 x1 + x2 -     x4  = 2
2x1 - x2 +         x5 = 6

-x1 + 3x2 = u

-x1 + 3x2 - u = 0

	к	н	б	кл
к	0   1  -1  -1
н  -1	0   1  -1 
б   1  -1   0	1
кл	1	1  -1	0

 1	2	0	0	1	0	0	0	1
 0	1	2	0	0	1	0	0	1
 2	0	1	2	0	0	1	0	1
 2	2   0	1	0	0	0	1	1
-1 -1  -1  -1   0	0	0	0	0

 0	2 -1/2  -1	1  0 -1/2   0  1/2
 0	1	 2	 0	0  1	0	0  1/2	
 1	0  1/2   1  0  0  1/2   0  1/2
 0  2   -1  -1  0  0   -1   1    0
 0 -1 -1/2   0  0  0  1/2   0  1/2
 
 0 1 -1/2 -1/2  0  0 -1/2   
