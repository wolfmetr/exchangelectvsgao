;(cdr (cdr '(1 2 3 4)))
;(caddr '(1 2 3 4))
(define s 0)
(define s1 1)
(define s2 1)
(define he 1)
(define ta 2)

(set! s '((2 3) 1 2 3))
;(equal? (car s)(cddr s))
;(eq? (car s)(cddr s))
(set! he '(2 3))
(set! ta '(1 2 3))
(set! s1 (cons he ta))
(eq? (car s1)(cddr s1))
(set! s2 (cons he (cons 1 he)))
(eq? (car s2)(cddr s2))
(car '(1 . (2 . ())))
(cdr '(1 . (2 . ())))
(cddr '(1 . (2 . ())))
(define k '((1 . (2 . ())) . (2 . (3 . (4 . ((5 . (6 . ())). ()))))))
(define j '(((( 1 . (2 . ())) . (3 . ())) . (4 . ())) . (5 . ())))
'(1 . (2 . (( 3 . ((4 . ()) . ())) . (5 . ()))))