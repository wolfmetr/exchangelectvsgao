Безопасный MAC

А - противник
1. Возможности: 
	атака на основе выбранных сообщений.
	m1, m2, ..., mq -> Gi = S(k, mi)
2. Цель: 
	1) Новое сообщение (m,  t) - может быть мусор.
	2) Получение нового тега. (m, t) - подписала Алиса. (m, t') = v(k, m, t') = 'yes'.

MAC - пара s, v \ I = (S, V)

|k <- K | -------(t1, s(k, m1))------>|A|
|		| <-(m1 э M m2, m3, ..., mq)--| |
    |								   |
    b
   b = 1 if V(k, m, t)= = yes && !{(m1, t1), ..., (mq, tq)}.contains(m, t)
   b = 0 else

Опр. MAC I = (S, V) безопасен, если для любого эффективного A: Adv_mac[A, I] = P[b = 1] - незначимое

Определение MAC через PRF.

Пусть существует псевдослучайная функция: K x X -> Y, PRF определяем I_F = (S, V)
-S(k, m) = F(k, m)
-V(k, m, t) = if t = F(k, m) 'yes' else 'no'

Теорема: Если F - безопасная PRF и 1 / |y| - число незначимое, тогда MAC I_F является безопасным
Доказательство: A - эффективный противник MAC
				B - эффектиыный противник PRF 

				Adv_MAC[A, I_F] <= Adv_PRF[B, F] + 1 / |y| 

				Adv_PRF[B, F] - незначимое. Нужно доказать что 1 / |y| незначимое.
Доказательство: F - PRF - заменим на f(случайная) э FUNS[x,y]

 Источник                                A
| k э K |<------(m1, m2, ..., mq)-------| |
|       |--(t1 = f(m1), ..., tq=f(mq))->| |

A выигрывает t = f(m) && !{m1, ..., mq}.contains(m). P[t = f(m)] = 1 / |y| -> P[t = F(k, m)] = 1 / |y| 
ЧТД

AES (16 byte -> 16 byte) - PRF that can give auth codes for small messages. Как для произвольной длины?
	|CBC - MAC (финансовые протоколы)
	|HMAC	   (SSL, IPSEC, SSH)

В некоторых ситуациях 16 байт может быть много, тогда можно обрезать.

CBC - MAC. Encrypted CBC-MAC. ECBC-MAC.
M - большое. m0 -> F(k, *) => m1 ^ F(k, *) => m2 ^ F(k, *) => m3 ^ F(k1, *) => tag
Существует F: K x X -> X PRP
I_ECBC: K^2 : X_<=L -> X
			  X_<=L = (1 to L)(i => x^i).sum
Все вычисления на ключе K - raw CBC
	
MAC I = (S, V); S(k, m) = raw CBC(k, m) -> небезопасный
A: 1. Сообщение из 1 блока m э X
   2. Алиса считает t э F(k, m)
   3. Я знаю тег для (m, m ^ t) = m' -> (m', t') -> (m', t)


NMAC (nested MAC)
     m0 m1 m2 m3
-(k)->F->F->F->F->t||fpad (fixed panning)
				   |
			   K1->F
			  	   |
			      tag

Сущ F: K x X -> K
I_NMAC: K ^ 2 x X <= L -> K

Часть схемы до fpad - cascade
S(k, m) = cascade(k, m)
m || w
t = S(k, m)
t' = F(t, w)
(m || w, t')

Теорема:
для любого L > 0
для любого эффективного противника A использующего q запросов и схему:
I_ECBC: K^2 x X<=L -> X или I_NMAC: K ^ 2 x X<=L -> K

Adv_ECBC[A, I_ECBC] <= Adv_PRP[B, F] + 2 * q^2 / (|x|)
Adv_NMAC[A, I_NMAC] <= Adv_PRF[B, F] + q^2 / (2 |k|)